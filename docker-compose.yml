# Supported Version: 1.15.1
services:
  postgres:
    image: ${POSTGRES_IMAGE}
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: ${REDIS_IMAGE}
    env_file: .env
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - backend
  
  solr:
    image: ${SOLR_IMAGE}
    restart: always
    env_file: .env
    environment:
      - SOLR_CORE=${SOLR_CORE}
    command:
      - solr-precreate
      - ${SOLR_CORE}
    volumes:
      - solr_data:/var/lib/solr/data
    networks:
      - backend

  django:
    image: ${DJANGO_IMAGE}
    restart: always
    env_file: .env
    depends_on:
      - postgres
      - redis
      - solr
    # Note: depends_on does not wait for DB/Redis/Solr to be ready, only for containers to start
    volumes:
      - static_volume:/var/lib/django/static
      - media_volume:/var/lib/django/media
      - .env:/app/.env
      - ./pubsub_service_key.json:/app/pubsub_service_key.json
    networks:
      - backend
      - frontend

  celery:
    image: ${DJANGO_IMAGE}
    restart: always
    env_file: .env
    command: >
      celery -A config worker --loglevel=info
    depends_on:
      - postgres
      - redis
      - django
      - solr
    volumes:
      - static_volume:/var/lib/django/static
      - media_volume:/var/lib/django/media
      - .env:/app/.env
      - ./pubsub_service_key.json:/app/pubsub_service_key.json
    networks:
      - backend

  node:
    image: ${NODE_IMAGE}
    restart: always
    env_file: .env
    networks:
      - backend
      - frontend

  react:
    image: ${REACT_IMAGE}
    restart: always
    env_file: .env
    networks:
      - frontend

  nginx:
    image: ${NGINX_IMAGE}
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
      - static_volume:/var/lib/django/static
      - media_volume:/var/lib/django/media
    depends_on:
      - django
      - node
      - react
    networks:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
  solr_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
